---
title: "Analysis_RemovedValues"
format: html
editor: visual
---

```{r}
#Merge the datasets into one large dataset (cannot remember if I did this...)
#this code was for first pass at removing values using the separated box plots
library(tidyverse)
library(patchwork)

scar_lines <- c('3852', '3920' ,'3984')

killer_yeast_norm_noscar <- killeryeast_norm |> 
  filter(Culture != "3920") |> 
  filter(Culture != "3852") |> 
  filter(Culture != "3984")

killer_yeast_norm_noscar |> 
  filter(Culture == "3852")

merged_killeryeast_dataset_norm <- 
  rbind(scarlet_norm, killer_yeast_norm_noscar)

which(merged_killeryeast_dataset_norm$Well_Num == "C3" & merged_killeryeast_dataset_norm$Day == 7 & merged_killeryeast_dataset_norm$Replicate == 2)

merged_data_final <- merged_killeryeast_dataset_norm[-c(285, 282, 290, 352, 261, 241, 48, 76, 286), ]
  
which(merged_data_final$Well_Num == "C3" & merged_data_final$Day == 7 & merged_data_final$Replicate == 2)

write_csv(merged_data_final, "merged_data_rm_HK.csv")
```

```{r}
#Merge the datasets into one large dataset
#this code was for removing values using the normalized box plots not separated based on replicate number
killer_yeast_norm_noscar <- killeryeast_norm |> 
  filter(Culture != "3920") |> 
  filter(Culture != "3852") |> 
  filter(Culture != "3984")

killer_yeast_norm_noscar |> 
  filter(Culture == "3852") #should return nothing

#merge datasets
merged_killeryeast_dataset_norm <- 
  rbind(scarlet_norm, killer_yeast_norm_noscar)

#find rows to removed based on vaues found to not fit (rows listed in dataframe Full_Box_Plot_Outliers) ###NEED TO MAKE THESE TABLES IN EXCEL AND UPLOAD
which(merged_killeryeast_dataset_norm$Well_Num == "H2" & merged_killeryeast_dataset_norm$Day == 9 & merged_killeryeast_dataset_norm$Culture == "3984")
Removal_Table <- read_csv("Removals.csv")

#remove associated rows and save as new dataframe for analysis
merged_data_final_outliers <- merged_killeryeast_dataset_norm[-c(166, 413, 181, 225, 267, 352, 367, 388, 414, 29, 37, 39, 23, 33, 48, 76), ]
write_csv(merged_data_final_outliers, "merged_data_rm_HK_v2.csv")
```

```{r}
#remove data from both outlier methods before final data removal after looking at flowJo of other weird points on plots

merged_data_final_rm_HK_v3 <- merged_killeryeast_dataset_norm[-c(166, 413, 181, 225, 267, 352, 367, 388, 414, 29, 37, 39, 23, 33, 48, 76, 285, 282, 290, 261, 241, 286), ]
which(merged_data_final_rm_HK_v3$Well_Num == "C3" & merged_data_final_rm_HK_v3$Day == 7 & merged_data_final_rm_HK_v3$Replicate == 2)

write_csv(merged_data_final_rm_HK_v3, "merged_data_rm_HK_v3.csv")
```

Time to get into the analysis!!

```{r}
#compare to or add in code for original graphs from Mo --> did removing points alter the result?

#same code as Mo before
df_subset <- subset(merged_data_final_outliers, Culture %in% c("3824", "3821","3822", "3324", "3852", "3973", "3911", "3872", "3324m"))
df_subset_hand <- subset(merged_data_final, Culture %in% c("3824", "3821","3822", "3324", "3852", "3973", "3911", "3872", "3324m"))

jitter_plot_outlier <- ggplot(df_subset, aes(x = Day, y = as.numeric((Hgui_Alive_Num + Hgui_Dead_Num)/Total_Cells), col = Culture)) +
  geom_jitter(alpha = 0.2, width =0.1) +
  stat_summary(fun.data = "mean_se", linewidth = 0.5, size = 0.5, position=position_dodge(width = 0.2)) + labs(title = "Outlier Removal")

jitter_plot_hand <- ggplot(df_subset_hand, aes(x = Day, y = as.numeric((Hgui_Alive_Num + Hgui_Dead_Num)/Total_Cells), col = Culture)) +
  geom_jitter(alpha = 0.2, width =0.1) +
  stat_summary(fun.data = "mean_se", linewidth = 0.5, size = 0.5, position=position_dodge(width = 0.2)) + labs(title = "By Hand Removal")

jitter_plots_HK_Oct5 <- (jitter_plot_outlier + jitter_plot_hand + guide_area() + plot_layout(guides = 'collect') + plot_annotation(title = 'Jitter Plots for Cleaned Data'))

ggsave("jitter_plots_HK_Oct5.png")

#groupings for more figures
single_del <- c("3821", "3822", "3824")
rec_gen <- c('3911', '3905', '3842', '3973')
scar_lines <- c('3852', '3920' ,'3984')

#single deletions only
df_single_del_hand <- subset(merged_data_final, Culture %in% c(single_del, "3324m"))
df_single_del_outlier <- subset(merged_data_final_outliers, Culture %in% c(single_del, "3324m"))

jitter_plot_singles_outlier <- ggplot(df_single_del_outlier, aes(x = Day, y = as.numeric((Hgui_Alive_Num + Hgui_Dead_Num)/Total_Cells), col = Culture)) +
  geom_jitter(alpha = 0.2, width =0.1) +
  stat_summary(fun.data = "mean_se", linewidth = 0.5, size = 0.5, position=position_dodge(width = 0.2)) + labs(title = "Outlier Removal")

jitter_plot_singles_hand <- ggplot(df_single_del_hand, aes(x = Day, y = as.numeric((Hgui_Alive_Num + Hgui_Dead_Num)/Total_Cells), col = Culture)) +
  geom_jitter(alpha = 0.2, width =0.1) +
  stat_summary(fun.data = "mean_se", linewidth = 0.5, size = 0.5, position=position_dodge(width = 0.2)) + labs(title = "By Hand Removal")

jitter_plots_singles_HK_Oct5 <- (jitter_plot_singles_outlier + jitter_plot_singles_hand + guide_area() + plot_layout(guides = 'collect') + plot_annotation(title = 'Jitter Plots for Cleaned Data Singles'))

ggsave("jitter_plots_singles_HK_Oct5.png")

#scarlet lines only
df_scar_hand <- subset(merged_data_final, Culture %in% c(scar_lines, "3324m"))
df_scar_outlier <- subset(merged_data_final_outliers, Culture %in% c(scar_lines, "3324m"))

jitter_plot_scar_outlier <- ggplot(df_scar_outlier, aes(x = Day, y = as.numeric((Hgui_Alive_Num + Hgui_Dead_Num)/Total_Cells), col = Culture)) +
  geom_jitter(alpha = 0.2, width =0.1) +
  stat_summary(fun.data = "mean_se", linewidth = 0.5, size = 0.5, position=position_dodge(width = 0.2)) + labs(title = "Outlier Removal")

jitter_plot_scar_hand <- ggplot(df_scar_hand, aes(x = Day, y = as.numeric((Hgui_Alive_Num + Hgui_Dead_Num)/Total_Cells), col = Culture)) +
  geom_jitter(alpha = 0.2, width =0.1) +
  stat_summary(fun.data = "mean_se", linewidth = 0.5, size = 0.5, position=position_dodge(width = 0.2)) + labs(title = "By Hand Removal")

jitter_plots_scarlet_HK_Oct5 <- (jitter_plot_scar_outlier + jitter_plot_scar_hand + guide_area() + plot_layout(guides = 'collect') + plot_annotation(title = 'Jitter Plots for Cleaned Data Scarlet'))

ggsave("jitter_plots_scarlet_HK_Oct5.png")

#rec genos only
df_rec_hand <- subset(merged_data_final, Culture %in% c(rec_gen, "3324m"))
df_rec_outlier <- subset(merged_data_final_outliers, Culture %in% c(rec_gen, "3324m"))

jitter_plot_rec_outlier <- ggplot(df_rec_outlier, aes(x = Day, y = as.numeric((Hgui_Alive_Num + Hgui_Dead_Num)/Total_Cells), col = Culture)) +
  geom_jitter(alpha = 0.2, width =0.1) +
  stat_summary(fun.data = "mean_se", linewidth = 0.5, size = 0.5, position=position_dodge(width = 0.2)) + labs(title = "Outlier Removal")

jitter_plot_rec_hand <- ggplot(df_rec_hand, aes(x = Day, y = as.numeric((Hgui_Alive_Num + Hgui_Dead_Num)/Total_Cells), col = Culture)) +
  geom_jitter(alpha = 0.2, width =0.1) +
  stat_summary(fun.data = "mean_se", linewidth = 0.5, size = 0.5, position=position_dodge(width = 0.2)) + labs(title = "By Hand Removal")

jitter_plots_rec_HK_Oct5 <- (jitter_plot_rec_outlier + jitter_plot_rec_hand + guide_area() + plot_layout(guides = 'collect') + plot_annotation(title = 'Jitter Plots for Cleaned Data Rec Geno'))

ggsave("jitter_plots_rec_HK_Oct5.png")

#3850 & 3324a only
```

```{r}
#flipped
merged_data_final <- read_csv("merged_data_rm_HK_v2.csv")
merged_data_final_outliers <- read_csv("merged_data_rm_HK.csv")

ggplot(df_scar_hand, aes(x = Day, y = norm_Hgui_totalprop, col = Culture)) +
  geom_jitter(alpha = 0.2, width =0.1) +
  stat_summary(fun.data = "mean_se", linewidth = 0.5, size = 0.5, position=position_dodge(width = 0.2)) + labs(title = "By Hand Removal")

ggplot(df_single_del_hand, aes(x = Day, y = norm_Hgui_totalprop, col = Culture)) +
  geom_jitter(alpha = 0.2, width =0.1) +
  stat_summary(fun.data = "mean_se", linewidth = 0.5, size = 0.5, position=position_dodge(width = 0.2)) + labs(title = "By Hand Removal")


ggplot(df_scar_outlier, aes(x = Day, y = norm_Hgui_totalprop, col = Culture)) +
  geom_jitter(alpha = 0.2, width =0.1) +
  stat_summary(fun.data = "mean_se", linewidth = 0.5, size = 0.5, position=position_dodge(width = 0.2)) + labs(title = "By Hand Removal")

ggplot(df_single_del_outlier, aes(x = Day, y = norm_Hgui_totalprop, col = Culture)) +
  geom_jitter(alpha = 0.2, width =0.1) +
  stat_summary(fun.data = "mean_se", linewidth = 0.5, size = 0.5, position=position_dodge(width = 0.2)) + labs(title = "By Hand Removal")
```

```{r}
#remove data from both outlier methods before final data removal after looking at flowJo of other weird points on plots

merged_data_final_rm_HK_v3 <- merged_killeryeast_dataset_norm[-c(166, 413, 181, 225, 267, 352, 367, 388, 414, 29, 37, 39, 23, 33, 48, 76, 285, 282, 290, 261, 241, 286), ]
which(merged_data_final_rm_HK_v3$Well_Num == "C3" & merged_data_final_rm_HK_v3$Day == 7 & merged_data_final_rm_HK_v3$Replicate == 2)

write_csv(merged_data_final_rm_HK_v3, "merged_data_rm_HK_v3.csv")
```

```{r}
#new analysis plots with all points removed from by hand and outlier plots --> need to check with flowJO and find points that look weird
df_rec_v3 <- subset(merged_data_final_rm_HK_v3, Culture %in% c(rec_gen, "3324m"))
df_scar_v3 <- subset(merged_data_final_rm_HK_v3, Culture %in% c(scar_lines, "3324m"))
df_single_del_v3 <- subset(merged_data_final_rm_HK_v3, Culture %in% c(single_del, "3324m"))


ggplot(df_single_del_v3, aes(x = Day, y = norm_Hgui_totalprop, col = Culture, label = Well_Num)) +
  geom_jitter(alpha = 0.2, width =0.1) + geom_text(hjust = 0.2, nudge_x = 0.15, check_overlap = TRUE) +
  stat_summary(fun.data = "mean_se", linewidth = 0.5, size = 0.5, position=position_dodge(width = 0.2)) + labs(title = "Combined Removals Single Deletion")


ggplot(df_scar_v3, aes(x = Day, y = norm_Hgui_totalprop, col = Culture, label = Well_Num)) +
  geom_jitter(alpha = 0.2, width =0.1) + geom_text(hjust = 0.2, nudge_x = 0.15, check_overlap = TRUE) +
  stat_summary(fun.data = "mean_se", linewidth = 0.5, size = 0.5, position=position_dodge(width = 0.2)) + labs(title = "Combined Removals Scarlet")

ggplot(df_rec_v3, aes(x = Day, y = norm_Hgui_totalprop, col = Culture, label = Well_Num)) +
  geom_jitter(alpha = 0.2, width =0.1) + geom_text(hjust = 0.2, nudge_x = 0.15, check_overlap = TRUE) +
  stat_summary(fun.data = "mean_se", linewidth = 0.5, size = 0.5, position=position_dodge(width = 0.2)) + labs(title = "Combined Removals Rec Genos")

```

```{r}
{r}
#remove data from both outlier methods and weird points on plots prior to looking at flowJo (will look at flowJo next to confirm which to remove)

merged_data_final_rm_HK_v4 <- merged_killeryeast_dataset_norm[-c(166, 413, 181, 225, 267, 352, 367, 388, 414, 29, 37, 39, 23, 33, 48, 76, 285, 282, 290, 261, 241, 286, 190, 226, 305, 350, 338, 24, 20, 58, 184, 222, 207, 269), ]

which(merged_killeryeast_dataset_norm$Well_Num == "D6" & merged_killeryeast_dataset_norm$Day == 7 & merged_killeryeast_dataset_norm$Culture == "3911")

write_csv(merged_data_final_rm_HK_v4, "merged_data_rm_HK_v4.csv")
```

```{r}
#new analysis plots with all points removed PRIOR TO CHECKING FLOWJO
df_rec_v4 <- subset(merged_data_final_rm_HK_v4, Culture %in% c(rec_gen, "3324m"))
df_scar_v4 <- subset(merged_data_final_rm_HK_v4, Culture %in% c(scar_lines, "3324m"))
df_single_del_v4 <- subset(merged_data_final_rm_HK_v4, Culture %in% c(single_del, "3324m"))

ggplot(df_single_del_v4, aes(x = Day, y = norm_Hgui_totalprop, col = Culture, label = Well_Num)) +
  geom_jitter(alpha = 0.2, width =0.1)  +
  stat_summary(fun.data = "mean_se", linewidth = 0.5, size = 0.5, position=position_dodge(width = 0.2)) + labs(title = "Combined Removals Single Deletion")

ggplot(df_scar_v4, aes(x = Day, y = norm_Hgui_totalprop, col = Culture, label = Well_Num)) +
  geom_jitter(alpha = 0.2, width =0.1) +
  stat_summary(fun.data = "mean_se", linewidth = 0.5, size = 0.5, position=position_dodge(width = 0.2)) + labs(title = "Combined Removals Scarlet")

ggplot(df_rec_v4, aes(x = Day, y = norm_Hgui_totalprop, col = Culture, label = Well_Num)) +
  geom_jitter(alpha = 0.2, width =0.1) +
  stat_summary(fun.data = "mean_se", linewidth = 0.5, size = 0.5, position=position_dodge(width = 0.2)) + labs(title = "Combined Removals Rec Genos")
```
